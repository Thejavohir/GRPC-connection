definitions:
  models.Error:
    properties:
      description:
        type: string
      error: {}
    type: object
  models.ListProducts:
    properties:
      id:
        type: integer
      model:
        type: string
      name:
        type: string
      ownerID:
        type: integer
    type: object
  models.Product:
    properties:
      model:
        type: string
      name:
        type: string
      ownerID:
        type: integer
    type: object
  models.RegisterUserModel:
    properties:
      code:
        type: string
      email:
        type: string
      lastName:
        type: string
      name:
        type: string
      password:
        type: string
      userame:
        type: string
    type: object
  models.User:
    properties:
      lastName:
        type: string
      name:
        type: string
    type: object
info:
  contact: {}
paths:
  /v1/product:
    post:
      consumes:
      - application/json
      description: new product creation
      parameters:
      - description: product
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.Product'
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: creates product api
      tags:
      - Product
  /v1/product/{id}:
    get:
      consumes:
      - application/json
      description: product by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: getting product by ID
      tags:
      - Product
  /v1/products/{id}:
    get:
      consumes:
      - application/json
      description: user products by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: getting user products by ID
      tags:
      - Product
  /v1/products/all:
    get:
      consumes:
      - application/json
      description: all products
      parameters:
      - description: query params
        in: query
        name: page
        type: string
      - description: query params
        in: query
        name: limit
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ListProducts'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/models.Error'
      summary: getting all products
      tags:
      - Product
  /v1/register:
    post:
      consumes:
      - application/json
      description: register api
      parameters:
      - description: register
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.RegisterUserModel'
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: registre user api
      tags:
      - Auth
  /v1/users:
    post:
      consumes:
      - application/json
      description: new user creation
      parameters:
      - description: user
        in: body
        name: request
        required: true
        schema:
          $ref: '#/definitions/models.User'
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: creates user api
      tags:
      - User
  /v1/users/{id}:
    get:
      consumes:
      - application/json
      description: user by ID
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success
      summary: getting user by ID
      tags:
      - User
swagger: "2.0"
